name: Symfony CI CD

on:
  push:
    branches: [main] #Action quand je push sur main 
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: app
          POSTGRES_USER: app
          POSTGRES_PASSWORD: "!ChangeMe!"
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    env:
      DATABASE_URL: postgres://app:!ChangeMe!@localhost:5432/app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo, pdo_pgsql
          ini-values: post_max_size=256M, max_execution_time=300
          coverage: none

      - name: Install composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader --no-interaction


      - name: Start Docker services
        run: docker compose -f compose.yaml up --build -d

      
      - name: Wait for server to be ready
        run: |
          for i in {1..10}; do
            if curl --silent http://localhost:8001 > /dev/null; then
              echo "Server is up!";
              break;
            fi
            echo "Waiting for server to start..."
            sleep 3
          done

      - name: Test DB connection manually
        run: |
          apt-get update && apt-get install -y postgresql-client
          PGPASSWORD="!ChangeMe!" psql -h localhost -U app -d app -c '\l'

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install PHP CodeSniffer
        run: composer global require "squizlabs/php_codesniffer=*"
      
      - name: Run PHP CodeSniffer
        run: ~/.composer/vendor/bin/phpcs --standard=PSR12 src

      - name: Install PHPStan
        run: composer global require phpstan/phpstan

      - name: Run PHPStan (level 5)
        run: ~/.composer/vendor/bin/phpstan analyse src --level=5

      - name: Install Cypress dependencies
        run: npm ci

      - name: Run Cypress tests
        run: npx cypress run

      - name: Stop Docker containers
        run: docker compose -f compose.yaml down

      - name: Show Symfony logs
        run: cat var/log/dev.log || true
      - name: Dump env vars
        run: printenv | grep DATABASE_URL


  docker-build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t symfony-app -f docker/php/Dockerfile docker/php


      - name: List Docker images
        run: docker images
